{"ast":null,"code":"export class SameValueSet {\n  constructor(selector) {\n    this.selector = selector;\n    this.selectedItemsExceptMinusZero = new Set();\n    this.data = [];\n    this.hasMinusZero = false;\n  }\n\n  tryAdd(value) {\n    const selected = this.selector(value);\n\n    if (Object.is(selected, -0)) {\n      if (this.hasMinusZero) {\n        return false;\n      }\n\n      this.data.push(value);\n      this.hasMinusZero = true;\n      return true;\n    }\n\n    const sizeBefore = this.selectedItemsExceptMinusZero.size;\n    this.selectedItemsExceptMinusZero.add(selected);\n\n    if (sizeBefore !== this.selectedItemsExceptMinusZero.size) {\n      this.data.push(value);\n      return true;\n    }\n\n    return false;\n  }\n\n  size() {\n    return this.data.length;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/SameValueSet.js"],"names":["SameValueSet","constructor","selector","selectedItemsExceptMinusZero","Set","data","hasMinusZero","tryAdd","value","selected","Object","is","push","sizeBefore","size","add","length","getData"],"mappings":"AAAA,OAAO,MAAMA,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,4BAAL,GAAoC,IAAIC,GAAJ,EAApC;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,YAAL,GAAoB,KAApB;AACH;;AACDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,UAAMC,QAAQ,GAAG,KAAKP,QAAL,CAAcM,KAAd,CAAjB;;AACA,QAAIE,MAAM,CAACC,EAAP,CAAUF,QAAV,EAAoB,CAAC,CAArB,CAAJ,EAA6B;AACzB,UAAI,KAAKH,YAAT,EAAuB;AACnB,eAAO,KAAP;AACH;;AACD,WAAKD,IAAL,CAAUO,IAAV,CAAeJ,KAAf;AACA,WAAKF,YAAL,GAAoB,IAApB;AACA,aAAO,IAAP;AACH;;AACD,UAAMO,UAAU,GAAG,KAAKV,4BAAL,CAAkCW,IAArD;AACA,SAAKX,4BAAL,CAAkCY,GAAlC,CAAsCN,QAAtC;;AACA,QAAII,UAAU,KAAK,KAAKV,4BAAL,CAAkCW,IAArD,EAA2D;AACvD,WAAKT,IAAL,CAAUO,IAAV,CAAeJ,KAAf;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACDM,EAAAA,IAAI,GAAG;AACH,WAAO,KAAKT,IAAL,CAAUW,MAAjB;AACH;;AACDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKZ,IAAZ;AACH;;AA9BqB","sourcesContent":["export class SameValueSet {\n    constructor(selector) {\n        this.selector = selector;\n        this.selectedItemsExceptMinusZero = new Set();\n        this.data = [];\n        this.hasMinusZero = false;\n    }\n    tryAdd(value) {\n        const selected = this.selector(value);\n        if (Object.is(selected, -0)) {\n            if (this.hasMinusZero) {\n                return false;\n            }\n            this.data.push(value);\n            this.hasMinusZero = true;\n            return true;\n        }\n        const sizeBefore = this.selectedItemsExceptMinusZero.size;\n        this.selectedItemsExceptMinusZero.add(selected);\n        if (sizeBefore !== this.selectedItemsExceptMinusZero.size) {\n            this.data.push(value);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}