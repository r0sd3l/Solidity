{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeEntry = exports.normalize = void 0;\n\nconst normalize = looseAbi => looseAbi.map(exports.normalizeEntry);\n\nexports.normalize = normalize;\n\nconst normalizeEntry = looseEntry => {\n  if (looseEntry.type === \"event\" || looseEntry.type === \"error\") {\n    // nothing gets normalized for events or errors right now\n    return looseEntry;\n  }\n\n  const entry = Object.assign(Object.assign(Object.assign({}, looseEntry), normalizeStateMutability(looseEntry)), {\n    type: looseEntry.type || \"function\"\n  });\n\n  if (entry.type === \"function\") {\n    entry.outputs = entry.outputs || [];\n  }\n\n  delete entry.payable;\n  delete entry.constant;\n  return entry;\n};\n\nexports.normalizeEntry = normalizeEntry;\n\nconst normalizeStateMutability = _ref => {\n  let {\n    stateMutability,\n    payable,\n    constant\n  } = _ref;\n\n  if (stateMutability) {\n    return {\n      stateMutability\n    };\n  }\n\n  return {\n    stateMutability: payable ? \"payable\" : constant ? \"view\" : \"nonpayable\"\n  };\n};","map":{"version":3,"sources":["../../lib/normalize.ts"],"names":[],"mappings":";;;;;;;AAGO,MAAM,SAAS,GAAI,QAAD,IACtB,QAAsB,CAAC,GAAvB,CAA2B,OAAA,CAAA,cAA3B,CADI;;AAAM,OAAA,CAAA,SAAA,GAAS,SAAT;;AAKN,MAAM,cAAc,GAAI,UAAD,IAA+C;AAC3E,MAAI,UAAU,CAAC,IAAX,KAAoB,OAApB,IAA+B,UAAU,CAAC,IAAX,KAAoB,OAAvD,EAAgE;AAC9D;AACA,WAAO,UAAP;AACD;;AAED,QAAM,KAAK,GAAG,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,UADS,CAAA,EAET,wBAAwB,CAAC,UAAD,CAFf,CAAA,EAEyD;AACrE,IAAA,IAAI,EAAE,UAAU,CAAC,IAAX,IAAmB;AAD4C,GAFzD,CAAd;;AAMA,MAAI,KAAK,CAAC,IAAN,KAAe,UAAnB,EAA+B;AAC7B,IAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,OAAN,IAAiB,EAAjC;AACD;;AAED,SAAQ,KAAa,CAAC,OAAtB;AACA,SAAQ,KAAa,CAAC,QAAtB;AAEA,SAAO,KAAP;AACD,CApBM;;AAAM,OAAA,CAAA,cAAA,GAAc,cAAd;;AA4Bb,MAAM,wBAAwB,GAAG,QAIsC;AAAA,MAJrC;AAChC,IAAA,eADgC;AAEhC,IAAA,OAFgC;AAGhC,IAAA;AAHgC,GAIqC;;AACrE,MAAI,eAAJ,EAAqB;AACnB,WAAO;AAAE,MAAA;AAAF,KAAP;AACD;;AAED,SAAO;AACL,IAAA,eAAe,EAAE,OAAO,GAAG,SAAH,GAAe,QAAQ,GAAG,MAAH,GAAY;AADtD,GAAP;AAGD,CAZD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeEntry = exports.normalize = void 0;\nconst normalize = (looseAbi) => looseAbi.map(exports.normalizeEntry);\nexports.normalize = normalize;\nconst normalizeEntry = (looseEntry) => {\n    if (looseEntry.type === \"event\" || looseEntry.type === \"error\") {\n        // nothing gets normalized for events or errors right now\n        return looseEntry;\n    }\n    const entry = Object.assign(Object.assign(Object.assign({}, looseEntry), normalizeStateMutability(looseEntry)), { type: looseEntry.type || \"function\" });\n    if (entry.type === \"function\") {\n        entry.outputs = entry.outputs || [];\n    }\n    delete entry.payable;\n    delete entry.constant;\n    return entry;\n};\nexports.normalizeEntry = normalizeEntry;\nconst normalizeStateMutability = ({ stateMutability, payable, constant }) => {\n    if (stateMutability) {\n        return { stateMutability };\n    }\n    return {\n        stateMutability: payable ? \"payable\" : constant ? \"view\" : \"nonpayable\"\n    };\n};\n//# sourceMappingURL=normalize.js.map"]},"metadata":{},"sourceType":"script"}