{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3InterfaceAdapter = void 0;\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst shim_1 = require(\"../../shim\");\n\nclass Web3InterfaceAdapter {\n  constructor() {\n    let {\n      provider,\n      networkType\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.web3 = new shim_1.Web3Shim({\n      provider,\n      networkType\n    });\n  }\n\n  getNetworkId() {\n    return this.web3.eth.net.getId();\n  }\n\n  getBlock(block) {\n    return this.web3.eth.getBlock(block);\n  }\n\n  getTransaction(tx) {\n    return this.web3.eth.getTransaction(tx);\n  }\n\n  getTransactionReceipt(tx) {\n    return this.web3.eth.getTransactionReceipt(tx);\n  }\n\n  getBalance(address) {\n    return this.web3.eth.getBalance(address);\n  }\n\n  getCode(address) {\n    return this.web3.eth.getCode(address);\n  }\n\n  getAccounts() {\n    return this.web3.eth.getAccounts();\n  }\n\n  estimateGas(transactionConfig) {\n    let stacktrace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      // web3 does not error gracefully when gas estimation fails due to a revert,\n      // so in cases where we want to get past this (debugging/stacktracing), we must\n      // catch the error and return null instead\n      if (stacktrace === true) {\n        try {\n          const gasEstimate = yield this.web3.eth.estimateGas(transactionConfig);\n          return gasEstimate;\n        } catch (_a) {\n          return null;\n        }\n      } else {\n        return this.web3.eth.estimateGas(transactionConfig);\n      }\n    });\n  }\n\n  getBlockNumber() {\n    return this.web3.eth.getBlockNumber();\n  }\n\n  getTransactionCostReport(receipt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const tx = yield this.getTransaction(receipt.transactionHash);\n      const block = yield this.getBlock(receipt.blockNumber);\n      if (!block) return null;\n      const balance = yield this.getBalance(tx.from);\n      const gasPrice = new bn_js_1.default(tx.gasPrice);\n      const gas = new bn_js_1.default(receipt.gasUsed);\n      const value = new bn_js_1.default(tx.value);\n      const cost = gasPrice.mul(gas).add(value);\n      return {\n        timestamp: block.timestamp,\n        from: tx.from,\n        balance: shim_1.Web3Shim.utils.fromWei(balance, \"ether\"),\n        gasUnit: \"gwei\",\n        gasPrice: shim_1.Web3Shim.utils.fromWei(gasPrice, \"gwei\"),\n        gas,\n        valueUnit: \"ETH\",\n        value: shim_1.Web3Shim.utils.fromWei(value, \"ether\"),\n        cost\n      };\n    });\n  }\n\n  displayCost(value) {\n    return shim_1.Web3Shim.utils.fromWei(value, \"ether\");\n  }\n\n}\n\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;","map":{"version":3,"sources":["../../../lib/adapter/web3/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Web3InterfaceAdapter = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst shim_1 = require(\"../../shim\");\nclass Web3InterfaceAdapter {\n    constructor({ provider, networkType } = {}) {\n        this.web3 = new shim_1.Web3Shim({ provider, networkType });\n    }\n    getNetworkId() {\n        return this.web3.eth.net.getId();\n    }\n    getBlock(block) {\n        return this.web3.eth.getBlock(block);\n    }\n    getTransaction(tx) {\n        return this.web3.eth.getTransaction(tx);\n    }\n    getTransactionReceipt(tx) {\n        return this.web3.eth.getTransactionReceipt(tx);\n    }\n    getBalance(address) {\n        return this.web3.eth.getBalance(address);\n    }\n    getCode(address) {\n        return this.web3.eth.getCode(address);\n    }\n    getAccounts() {\n        return this.web3.eth.getAccounts();\n    }\n    estimateGas(transactionConfig, stacktrace = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // web3 does not error gracefully when gas estimation fails due to a revert,\n            // so in cases where we want to get past this (debugging/stacktracing), we must\n            // catch the error and return null instead\n            if (stacktrace === true) {\n                try {\n                    const gasEstimate = yield this.web3.eth.estimateGas(transactionConfig);\n                    return gasEstimate;\n                }\n                catch (_a) {\n                    return null;\n                }\n            }\n            else {\n                return this.web3.eth.estimateGas(transactionConfig);\n            }\n        });\n    }\n    getBlockNumber() {\n        return this.web3.eth.getBlockNumber();\n    }\n    getTransactionCostReport(receipt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield this.getTransaction(receipt.transactionHash);\n            const block = yield this.getBlock(receipt.blockNumber);\n            if (!block)\n                return null;\n            const balance = yield this.getBalance(tx.from);\n            const gasPrice = new bn_js_1.default(tx.gasPrice);\n            const gas = new bn_js_1.default(receipt.gasUsed);\n            const value = new bn_js_1.default(tx.value);\n            const cost = gasPrice.mul(gas).add(value);\n            return {\n                timestamp: block.timestamp,\n                from: tx.from,\n                balance: shim_1.Web3Shim.utils.fromWei(balance, \"ether\"),\n                gasUnit: \"gwei\",\n                gasPrice: shim_1.Web3Shim.utils.fromWei(gasPrice, \"gwei\"),\n                gas,\n                valueUnit: \"ETH\",\n                value: shim_1.Web3Shim.utils.fromWei(value, \"ether\"),\n                cost\n            };\n        });\n    }\n    displayCost(value) {\n        return shim_1.Web3Shim.utils.fromWei(value, \"ether\");\n    }\n}\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}