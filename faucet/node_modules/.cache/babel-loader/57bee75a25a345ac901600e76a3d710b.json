{"ast":null,"code":"import { genericTuple } from '../../arbitrary/genericTuple.js';\nimport { convertFromNextPropertyWithHooks } from './ConvertersProperty.js';\nimport { Property } from './Property.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nimport { convertFromNext, convertToNext } from '../arbitrary/definition/Converters.js';\n\nfunction property() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length < 2) throw new Error('property expects at least two parameters');\n  const arbs = args.slice(0, args.length - 1);\n  const p = args[args.length - 1];\n  return convertFromNextPropertyWithHooks(new Property(genericTuple(arbs.map(arb => convertFromNext(new AlwaysShrinkableArbitrary(convertToNext(arb))))), t => p(...t)));\n}\n\nexport { property };","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/check/property/Property.generated.js"],"names":["genericTuple","convertFromNextPropertyWithHooks","Property","AlwaysShrinkableArbitrary","convertFromNext","convertToNext","property","args","length","Error","arbs","slice","p","map","arb","t"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iCAA7B;AACA,SAASC,gCAAT,QAAiD,yBAAjD;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,yBAAT,QAA0C,yDAA1C;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,uCAA/C;;AACA,SAASC,QAAT,GAA2B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACvB,MAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EACI,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACJ,QAAMC,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcJ,IAAI,CAACC,MAAL,GAAc,CAA5B,CAAb;AACA,QAAMI,CAAC,GAAGL,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAd;AACA,SAAOP,gCAAgC,CAAC,IAAIC,QAAJ,CAAaF,YAAY,CAACU,IAAI,CAACG,GAAL,CAASC,GAAG,IAAIV,eAAe,CAAC,IAAID,yBAAJ,CAA8BE,aAAa,CAACS,GAAD,CAA3C,CAAD,CAA/B,CAAD,CAAzB,EAAgHC,CAAC,IAAIH,CAAC,CAAC,GAAGG,CAAJ,CAAtH,CAAD,CAAvC;AACH;;AACD,SAAST,QAAT","sourcesContent":["import { genericTuple } from '../../arbitrary/genericTuple.js';\nimport { convertFromNextPropertyWithHooks } from './ConvertersProperty.js';\nimport { Property } from './Property.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nimport { convertFromNext, convertToNext } from '../arbitrary/definition/Converters.js';\nfunction property(...args) {\n    if (args.length < 2)\n        throw new Error('property expects at least two parameters');\n    const arbs = args.slice(0, args.length - 1);\n    const p = args[args.length - 1];\n    return convertFromNextPropertyWithHooks(new Property(genericTuple(arbs.map(arb => convertFromNext(new AlwaysShrinkableArbitrary(convertToNext(arb))))), t => p(...t)));\n}\nexport { property };\n"]},"metadata":{},"sourceType":"module"}