{"ast":null,"code":"import { ConverterFromNextProperty } from './ConverterFromNextProperty.js';\nimport { ConverterToNextProperty } from './ConverterToNextProperty.js';\nexport function convertFromNextProperty(property) {\n  if (ConverterToNextProperty.isConverterToNext(property)) {\n    return property.property;\n  }\n\n  return new ConverterFromNextProperty(property);\n}\nexport function convertToNextProperty(property) {\n  if (ConverterFromNextProperty.isConverterFromNext(property)) {\n    return property.property;\n  }\n\n  return new ConverterToNextProperty(property);\n}\nexport function convertFromNextPropertyWithHooks(property) {\n  const oldProperty = convertFromNextProperty(property);\n  const hooks = {\n    beforeEach(hookFunction) {\n      property.beforeEach(hookFunction);\n      return oldProperty;\n    },\n\n    afterEach(hookFunction) {\n      property.afterEach(hookFunction);\n      return oldProperty;\n    }\n\n  };\n  return Object.assign(oldProperty, hooks);\n}\nexport function convertFromNextAsyncPropertyWithHooks(property) {\n  const oldProperty = convertFromNextProperty(property);\n  const hooks = {\n    beforeEach(hookFunction) {\n      property.beforeEach(hookFunction);\n      return oldProperty;\n    },\n\n    afterEach(hookFunction) {\n      property.afterEach(hookFunction);\n      return oldProperty;\n    }\n\n  };\n  return Object.assign(oldProperty, hooks);\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/check/property/ConvertersProperty.js"],"names":["ConverterFromNextProperty","ConverterToNextProperty","convertFromNextProperty","property","isConverterToNext","convertToNextProperty","isConverterFromNext","convertFromNextPropertyWithHooks","oldProperty","hooks","beforeEach","hookFunction","afterEach","Object","assign","convertFromNextAsyncPropertyWithHooks"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,gCAA1C;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAC9C,MAAIF,uBAAuB,CAACG,iBAAxB,CAA0CD,QAA1C,CAAJ,EAAyD;AACrD,WAAOA,QAAQ,CAACA,QAAhB;AACH;;AACD,SAAO,IAAIH,yBAAJ,CAA8BG,QAA9B,CAAP;AACH;AACD,OAAO,SAASE,qBAAT,CAA+BF,QAA/B,EAAyC;AAC5C,MAAIH,yBAAyB,CAACM,mBAA1B,CAA8CH,QAA9C,CAAJ,EAA6D;AACzD,WAAOA,QAAQ,CAACA,QAAhB;AACH;;AACD,SAAO,IAAIF,uBAAJ,CAA4BE,QAA5B,CAAP;AACH;AACD,OAAO,SAASI,gCAAT,CAA0CJ,QAA1C,EAAoD;AACvD,QAAMK,WAAW,GAAGN,uBAAuB,CAACC,QAAD,CAA3C;AACA,QAAMM,KAAK,GAAG;AACVC,IAAAA,UAAU,CAACC,YAAD,EAAe;AACrBR,MAAAA,QAAQ,CAACO,UAAT,CAAoBC,YAApB;AACA,aAAOH,WAAP;AACH,KAJS;;AAKVI,IAAAA,SAAS,CAACD,YAAD,EAAe;AACpBR,MAAAA,QAAQ,CAACS,SAAT,CAAmBD,YAAnB;AACA,aAAOH,WAAP;AACH;;AARS,GAAd;AAUA,SAAOK,MAAM,CAACC,MAAP,CAAcN,WAAd,EAA2BC,KAA3B,CAAP;AACH;AACD,OAAO,SAASM,qCAAT,CAA+CZ,QAA/C,EAAyD;AAC5D,QAAMK,WAAW,GAAGN,uBAAuB,CAACC,QAAD,CAA3C;AACA,QAAMM,KAAK,GAAG;AACVC,IAAAA,UAAU,CAACC,YAAD,EAAe;AACrBR,MAAAA,QAAQ,CAACO,UAAT,CAAoBC,YAApB;AACA,aAAOH,WAAP;AACH,KAJS;;AAKVI,IAAAA,SAAS,CAACD,YAAD,EAAe;AACpBR,MAAAA,QAAQ,CAACS,SAAT,CAAmBD,YAAnB;AACA,aAAOH,WAAP;AACH;;AARS,GAAd;AAUA,SAAOK,MAAM,CAACC,MAAP,CAAcN,WAAd,EAA2BC,KAA3B,CAAP;AACH","sourcesContent":["import { ConverterFromNextProperty } from './ConverterFromNextProperty.js';\nimport { ConverterToNextProperty } from './ConverterToNextProperty.js';\nexport function convertFromNextProperty(property) {\n    if (ConverterToNextProperty.isConverterToNext(property)) {\n        return property.property;\n    }\n    return new ConverterFromNextProperty(property);\n}\nexport function convertToNextProperty(property) {\n    if (ConverterFromNextProperty.isConverterFromNext(property)) {\n        return property.property;\n    }\n    return new ConverterToNextProperty(property);\n}\nexport function convertFromNextPropertyWithHooks(property) {\n    const oldProperty = convertFromNextProperty(property);\n    const hooks = {\n        beforeEach(hookFunction) {\n            property.beforeEach(hookFunction);\n            return oldProperty;\n        },\n        afterEach(hookFunction) {\n            property.afterEach(hookFunction);\n            return oldProperty;\n        },\n    };\n    return Object.assign(oldProperty, hooks);\n}\nexport function convertFromNextAsyncPropertyWithHooks(property) {\n    const oldProperty = convertFromNextProperty(property);\n    const hooks = {\n        beforeEach(hookFunction) {\n            property.beforeEach(hookFunction);\n            return oldProperty;\n        },\n        afterEach(hookFunction) {\n            property.afterEach(hookFunction);\n            return oldProperty;\n        },\n    };\n    return Object.assign(oldProperty, hooks);\n}\n"]},"metadata":{},"sourceType":"module"}