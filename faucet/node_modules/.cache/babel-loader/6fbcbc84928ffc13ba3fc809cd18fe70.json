{"ast":null,"code":"import { FrequencyArbitrary } from './_internals/FrequencyArbitrary.js';\n\nfunction isOneOfContraints(param) {\n  return param != null && typeof param === 'object' && !('generate' in param);\n}\n\nfunction oneof() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const constraints = args[0];\n\n  if (isOneOfContraints(constraints)) {\n    const weightedArbs = args.slice(1).map(arbitrary => ({\n      arbitrary,\n      weight: 1\n    }));\n    return FrequencyArbitrary.fromOld(weightedArbs, constraints, 'fc.oneof');\n  }\n\n  const weightedArbs = args.map(arbitrary => ({\n    arbitrary,\n    weight: 1\n  }));\n  return FrequencyArbitrary.fromOld(weightedArbs, {}, 'fc.oneof');\n}\n\nexport { oneof };","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/oneof.js"],"names":["FrequencyArbitrary","isOneOfContraints","param","oneof","args","constraints","weightedArbs","slice","map","arbitrary","weight","fromOld"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,oCAAnC;;AACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,SAAOA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAlC,IAA8C,EAAE,cAAcA,KAAhB,CAArD;AACH;;AACD,SAASC,KAAT,GAAwB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACpB,QAAMC,WAAW,GAAGD,IAAI,CAAC,CAAD,CAAxB;;AACA,MAAIH,iBAAiB,CAACI,WAAD,CAArB,EAAoC;AAChC,UAAMC,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,GAAd,CAAmBC,SAAD,KAAgB;AAAEA,MAAAA,SAAF;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAAhB,CAAlB,CAArB;AACA,WAAOV,kBAAkB,CAACW,OAAnB,CAA2BL,YAA3B,EAAyCD,WAAzC,EAAsD,UAAtD,CAAP;AACH;;AACD,QAAMC,YAAY,GAAGF,IAAI,CAACI,GAAL,CAAUC,SAAD,KAAgB;AAAEA,IAAAA,SAAF;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAhB,CAAT,CAArB;AACA,SAAOV,kBAAkB,CAACW,OAAnB,CAA2BL,YAA3B,EAAyC,EAAzC,EAA6C,UAA7C,CAAP;AACH;;AACD,SAASH,KAAT","sourcesContent":["import { FrequencyArbitrary } from './_internals/FrequencyArbitrary.js';\nfunction isOneOfContraints(param) {\n    return param != null && typeof param === 'object' && !('generate' in param);\n}\nfunction oneof(...args) {\n    const constraints = args[0];\n    if (isOneOfContraints(constraints)) {\n        const weightedArbs = args.slice(1).map((arbitrary) => ({ arbitrary, weight: 1 }));\n        return FrequencyArbitrary.fromOld(weightedArbs, constraints, 'fc.oneof');\n    }\n    const weightedArbs = args.map((arbitrary) => ({ arbitrary, weight: 1 }));\n    return FrequencyArbitrary.fromOld(weightedArbs, {}, 'fc.oneof');\n}\nexport { oneof };\n"]},"metadata":{},"sourceType":"module"}