{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Solidity\\\\solidity\\\\faucet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { loadContract } from \"./utils/load-contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n    contract: null\n  });\n  const [balance, setBallance] = useState(null);\n  const [account, setAccount] = useState(null);\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n      const contract = await loadContract(\"Faucet\", provider);\n\n      if (provider) {\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract\n        });\n      } else {\n        console.error(\"Please, install Metamask.\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {\n        contract,\n        web3\n      } = web3Api;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBallance(web3.utils.fromWei(balance, \"ether\"));\n    };\n\n    web3Api.contract && loadBalance();\n  }, [web3Api]);\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n    };\n\n    web3Api.web3 && getAccount();\n  }, [web3Api.web3]);\n\n  const addFunds = async () => {\n    const {\n      contract,\n      web3\n    } = web3Api;\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\", \"ether\")\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faucet-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"faucet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-flex is-align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"mr-2\",\n              children: \"Account: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-small\",\n            onClick: () => web3Api.provider.request({\n              method: \"eth_requestAccounts\"\n            }),\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balance-view is-size-2 my-4\",\n          children: [\"Current Balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 30\n          }, this), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFunds,\n          className: \"button is-link mr-2\",\n          children: \"Donate 1 ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-primary\",\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"x/TXrMH+nRuegEJqnSBowCTlwDY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/src/App.js"],"names":["useEffect","useState","Web3","detectEthereumProvider","loadContract","App","web3Api","setWeb3Api","provider","web3","contract","balance","setBallance","account","setAccount","loadProvider","console","error","loadBalance","eth","getBalance","address","utils","fromWei","getAccount","accounts","getAccounts","addFunds","from","value","toWei","request","method"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { loadContract } from \"./utils/load-contract\";\n\n\nfunction App() {\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n    contract: null\n  })\n\n  const [balance, setBallance] = useState(null)\n  const [account, setAccount] = useState(null)\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider()\n      const contract = await loadContract(\"Faucet\", provider)\n\n      if (provider) {\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract\n        })\n      } else {\n        console.error(\"Please, install Metamask.\")\n      }\n    }\n\n    loadProvider()\n  }, [])\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      const { contract, web3 } = web3Api\n      const balance = await web3.eth.getBalance(contract.address)\n      setBallance(web3.utils.fromWei(balance, \"ether\"))\n    }\n\n    web3Api.contract && loadBalance()\n  }, [web3Api])\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts()\n      setAccount(accounts[0])\n    }\n\n    web3Api.web3 && getAccount()\n  }, [web3Api.web3])\n\n  const addFunds = async () => {\n    const { contract, web3 } = web3Api\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\",\"ether\")\n    })\n  }\n\n  return (\n    <>\n      <div className=\"faucet-wrapper\">\n        <div className=\"faucet\">\n          <div className=\"is-flex is-align-items-center\">\n            <span>\n              <strong className=\"mr-2\">Account: </strong>\n            </span>\n              { account ?\n                <div>{account}</div> :\n                <button\n                  className=\"button is-small\"\n                  onClick={() =>\n                    web3Api.provider.request({method: \"eth_requestAccounts\"}\n                  )}\n                >\n                  Connect Wallet\n                </button>\n              }\n          </div>\n          <div className=\"balance-view is-size-2 my-4\">\n            Current Balance: <strong>{balance}</strong> ETH\n          </div>\n          <button\n            onClick={addFunds}\n            className=\"button is-link mr-2\">Donate 1 ETH\n          </button>\n          <button\n            className=\"button is-primary\">Withdraw</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}