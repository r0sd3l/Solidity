{"ast":null,"code":"export const indexToCharStringMapper = String.fromCodePoint;\nexport function indexToCharStringUnmapper(c) {\n  if (typeof c !== 'string') {\n    throw new Error('Cannot unmap non-string');\n  }\n\n  if (c.length === 0 || c.length > 2) {\n    throw new Error('Cannot unmap string with more or less than one character');\n  }\n\n  const c1 = c.charCodeAt(0);\n\n  if (c.length === 1) {\n    return c1;\n  }\n\n  const c2 = c.charCodeAt(1);\n\n  if (c1 < 0xd800 || c1 > 0xdbff || c2 < 0xdc00 || c2 > 0xdfff) {\n    throw new Error('Cannot unmap invalid surrogate pairs');\n  }\n\n  return c.codePointAt(0);\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/IndexToCharString.js"],"names":["indexToCharStringMapper","String","fromCodePoint","indexToCharStringUnmapper","c","Error","length","c1","charCodeAt","c2","codePointAt"],"mappings":"AAAA,OAAO,MAAMA,uBAAuB,GAAGC,MAAM,CAACC,aAAvC;AACP,OAAO,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AACzC,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACvB,UAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACD,MAAID,CAAC,CAACE,MAAF,KAAa,CAAb,IAAkBF,CAAC,CAACE,MAAF,GAAW,CAAjC,EAAoC;AAChC,UAAM,IAAID,KAAJ,CAAU,0DAAV,CAAN;AACH;;AACD,QAAME,EAAE,GAAGH,CAAC,CAACI,UAAF,CAAa,CAAb,CAAX;;AACA,MAAIJ,CAAC,CAACE,MAAF,KAAa,CAAjB,EAAoB;AAChB,WAAOC,EAAP;AACH;;AACD,QAAME,EAAE,GAAGL,CAAC,CAACI,UAAF,CAAa,CAAb,CAAX;;AACA,MAAID,EAAE,GAAG,MAAL,IAAeA,EAAE,GAAG,MAApB,IAA8BE,EAAE,GAAG,MAAnC,IAA6CA,EAAE,GAAG,MAAtD,EAA8D;AAC1D,UAAM,IAAIJ,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,SAAOD,CAAC,CAACM,WAAF,CAAc,CAAd,CAAP;AACH","sourcesContent":["export const indexToCharStringMapper = String.fromCodePoint;\nexport function indexToCharStringUnmapper(c) {\n    if (typeof c !== 'string') {\n        throw new Error('Cannot unmap non-string');\n    }\n    if (c.length === 0 || c.length > 2) {\n        throw new Error('Cannot unmap string with more or less than one character');\n    }\n    const c1 = c.charCodeAt(0);\n    if (c.length === 1) {\n        return c1;\n    }\n    const c2 = c.charCodeAt(1);\n    if (c1 < 0xd800 || c1 > 0xdbff || c2 < 0xdc00 || c2 > 0xdfff) {\n        throw new Error('Cannot unmap invalid surrogate pairs');\n    }\n    return c.codePointAt(0);\n}\n"]},"metadata":{},"sourceType":"module"}