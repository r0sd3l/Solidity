{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInterfaceAdapter = void 0;\n\nconst web3_1 = require(\"./web3\");\n\nconst getNetworkTypeClass = function () {\n  let networkType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ethereum\";\n  const supportedEvmNetworks = [\"ethereum\", \"fabric-evm\", \"quorum\"];\n  if (supportedEvmNetworks.includes(networkType)) return \"evm-like\";\n  return networkType;\n};\n\nconst createInterfaceAdapter = options => {\n  const {\n    networkType\n  } = options;\n\n  switch (getNetworkTypeClass(networkType)) {\n    case \"evm-like\":\n      {\n        const {\n          provider\n        } = options;\n        return new web3_1.Web3InterfaceAdapter({\n          networkType: networkType,\n          provider: provider\n        });\n      }\n\n    default:\n      throw Error(`Sorry, \"${networkType}\" is not supported at this time.`);\n  }\n};\n\nexports.createInterfaceAdapter = createInterfaceAdapter;","map":{"version":3,"sources":["../../lib/adapter/index.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAMA,MAAM,mBAAmB,GAAG,YAA6B;AAAA,MAA5B,WAA4B,uEAAd,UAAc;AACvD,QAAM,oBAAoB,GAAG,CAAC,UAAD,EAAa,YAAb,EAA2B,QAA3B,CAA7B;AAEA,MAAI,oBAAoB,CAAC,QAArB,CAA8B,WAA9B,CAAJ,EAAgD,OAAO,UAAP;AAChD,SAAO,WAAP;AACD,CALD;;AAOO,MAAM,sBAAsB,GACjC,OADoC,IAEhB;AACpB,QAAM;AAAE,IAAA;AAAF,MAAkB,OAAxB;;AAEA,UAAQ,mBAAmB,CAAC,WAAD,CAA3B;AACE,SAAK,UAAL;AAAiB;AACf,cAAM;AAAE,UAAA;AAAF,YAAe,OAArB;AAEA,eAAO,IAAI,MAAA,CAAA,oBAAJ,CAAyB;AAC9B,UAAA,WAAW,EAAE,WADiB;AAE9B,UAAA,QAAQ,EAAE;AAFoB,SAAzB,CAAP;AAID;;AACD;AACE,YAAM,KAAK,CAAC,WAAW,WAAW,kCAAvB,CAAX;AAVJ;AAYD,CAjBM;;AAAM,OAAA,CAAA,sBAAA,GAAsB,sBAAtB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInterfaceAdapter = void 0;\nconst web3_1 = require(\"./web3\");\nconst getNetworkTypeClass = (networkType = \"ethereum\") => {\n    const supportedEvmNetworks = [\"ethereum\", \"fabric-evm\", \"quorum\"];\n    if (supportedEvmNetworks.includes(networkType))\n        return \"evm-like\";\n    return networkType;\n};\nconst createInterfaceAdapter = (options) => {\n    const { networkType } = options;\n    switch (getNetworkTypeClass(networkType)) {\n        case \"evm-like\": {\n            const { provider } = options;\n            return new web3_1.Web3InterfaceAdapter({\n                networkType: networkType,\n                provider: provider\n            });\n        }\n        default:\n            throw Error(`Sorry, \"${networkType}\" is not supported at this time.`);\n    }\n};\nexports.createInterfaceAdapter = createInterfaceAdapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}