{"ast":null,"code":"import { integer } from './integer.js';\nimport { tuple } from './tuple.js';\nimport { doubleNext } from './_next/doubleNext.js';\n\nfunction next(n) {\n  return integer(0, (1 << n) - 1);\n}\n\nconst doubleFactor = Math.pow(2, 27);\nconst doubleDivisor = Math.pow(2, -53);\n\nconst doubleInternal = () => {\n  return tuple(next(26), next(27)).map(v => (v[0] * doubleFactor + v[1]) * doubleDivisor);\n};\n\nfunction double() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'object') {\n    if (args[0].next) {\n      return doubleNext(args[0]);\n    }\n\n    const min = args[0].min !== undefined ? args[0].min : 0;\n    const max = args[0].max !== undefined ? args[0].max : 1;\n    return doubleInternal().map(v => min + v * (max - min)).filter(g => g !== max || g === min);\n  } else {\n    const a = args[0];\n    const b = args[1];\n    if (a === undefined) return doubleInternal();\n    if (b === undefined) return doubleInternal().map(v => v * a).filter(g => g !== a || g === 0);\n    return doubleInternal().map(v => a + v * (b - a)).filter(g => g !== b || g === a);\n  }\n}\n\nexport { double };","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/double.js"],"names":["integer","tuple","doubleNext","next","n","doubleFactor","Math","pow","doubleDivisor","doubleInternal","map","v","double","args","min","undefined","max","filter","g","a","b"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AACA,SAASC,IAAT,CAAcC,CAAd,EAAiB;AACb,SAAOJ,OAAO,CAAC,CAAD,EAAI,CAAC,KAAKI,CAAN,IAAW,CAAf,CAAd;AACH;;AACD,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAArB;AACA,MAAMC,aAAa,GAAGF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAb,CAAtB;;AACA,MAAME,cAAc,GAAG,MAAM;AACzB,SAAOR,KAAK,CAACE,IAAI,CAAC,EAAD,CAAL,EAAWA,IAAI,CAAC,EAAD,CAAf,CAAL,CAA0BO,GAA1B,CAA+BC,CAAD,IAAO,CAACA,CAAC,CAAC,CAAD,CAAD,GAAON,YAAP,GAAsBM,CAAC,CAAC,CAAD,CAAxB,IAA+BH,aAApE,CAAP;AACH,CAFD;;AAGA,SAASI,MAAT,GAAyB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACrB,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC7B,QAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQV,IAAZ,EAAkB;AACd,aAAOD,UAAU,CAACW,IAAI,CAAC,CAAD,CAAL,CAAjB;AACH;;AACD,UAAMC,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQC,GAAR,KAAgBC,SAAhB,GAA4BF,IAAI,CAAC,CAAD,CAAJ,CAAQC,GAApC,GAA0C,CAAtD;AACA,UAAME,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQG,GAAR,KAAgBD,SAAhB,GAA4BF,IAAI,CAAC,CAAD,CAAJ,CAAQG,GAApC,GAA0C,CAAtD;AACA,WAAQP,cAAc,GACjBC,GADG,CACEC,CAAD,IAAOG,GAAG,GAAGH,CAAC,IAAIK,GAAG,GAAGF,GAAV,CADf,EAEHG,MAFG,CAEKC,CAAD,IAAOA,CAAC,KAAKF,GAAN,IAAaE,CAAC,KAAKJ,GAF9B,CAAR;AAGH,GATD,MAUK;AACD,UAAMK,CAAC,GAAGN,IAAI,CAAC,CAAD,CAAd;AACA,UAAMO,CAAC,GAAGP,IAAI,CAAC,CAAD,CAAd;AACA,QAAIM,CAAC,KAAKJ,SAAV,EACI,OAAON,cAAc,EAArB;AACJ,QAAIW,CAAC,KAAKL,SAAV,EACI,OAAQN,cAAc,GACjBC,GADG,CACEC,CAAD,IAAOA,CAAC,GAAGQ,CADZ,EAEHF,MAFG,CAEKC,CAAD,IAAOA,CAAC,KAAKC,CAAN,IAAWD,CAAC,KAAK,CAF5B,CAAR;AAGJ,WAAQT,cAAc,GACjBC,GADG,CACEC,CAAD,IAAOQ,CAAC,GAAGR,CAAC,IAAIS,CAAC,GAAGD,CAAR,CADb,EAEHF,MAFG,CAEKC,CAAD,IAAOA,CAAC,KAAKE,CAAN,IAAWF,CAAC,KAAKC,CAF5B,CAAR;AAGH;AACJ;;AACD,SAASP,MAAT","sourcesContent":["import { integer } from './integer.js';\nimport { tuple } from './tuple.js';\nimport { doubleNext } from './_next/doubleNext.js';\nfunction next(n) {\n    return integer(0, (1 << n) - 1);\n}\nconst doubleFactor = Math.pow(2, 27);\nconst doubleDivisor = Math.pow(2, -53);\nconst doubleInternal = () => {\n    return tuple(next(26), next(27)).map((v) => (v[0] * doubleFactor + v[1]) * doubleDivisor);\n};\nfunction double(...args) {\n    if (typeof args[0] === 'object') {\n        if (args[0].next) {\n            return doubleNext(args[0]);\n        }\n        const min = args[0].min !== undefined ? args[0].min : 0;\n        const max = args[0].max !== undefined ? args[0].max : 1;\n        return (doubleInternal()\n            .map((v) => min + v * (max - min))\n            .filter((g) => g !== max || g === min));\n    }\n    else {\n        const a = args[0];\n        const b = args[1];\n        if (a === undefined)\n            return doubleInternal();\n        if (b === undefined)\n            return (doubleInternal()\n                .map((v) => v * a)\n                .filter((g) => g !== a || g === 0));\n        return (doubleInternal()\n            .map((v) => a + v * (b - a))\n            .filter((g) => g !== b || g === a));\n    }\n}\nexport { double };\n"]},"metadata":{},"sourceType":"module"}