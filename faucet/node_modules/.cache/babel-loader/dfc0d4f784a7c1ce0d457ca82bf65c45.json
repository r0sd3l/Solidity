{"ast":null,"code":"var _a;\n\nimport { Stream } from '../../../stream/Stream.js';\nimport { ConverterFromNext } from './ConverterFromNext.js';\nimport { NextArbitrary } from './NextArbitrary.js';\nimport { NextValue } from './NextValue.js';\nconst identifier = '__ConverterToNext__';\nexport function fromShrinkableToNextValue(g) {\n  if (!g.hasToBeCloned) {\n    return new NextValue(g.value_, g);\n  }\n\n  return new NextValue(g.value_, g, () => g.value);\n}\nexport class ConverterToNext extends NextArbitrary {\n  constructor(arb) {\n    super();\n    this.arb = arb;\n    this[_a] = true;\n  }\n\n  static isConverterToNext(arb) {\n    return identifier in arb;\n  }\n\n  static convertIfNeeded(arb) {\n    if (ConverterFromNext.isConverterFromNext(arb)) return arb.arb;else return new ConverterToNext(arb);\n  }\n\n  generate(mrng, biasFactor) {\n    const g = biasFactor !== undefined ? this.arb.withBias(biasFactor).generate(mrng) : this.arb.generate(mrng);\n    return fromShrinkableToNextValue(g);\n  }\n\n  canShrinkWithoutContext(_value) {\n    return false;\n  }\n\n  shrink(_value, context) {\n    if (this.isSafeContext(context)) {\n      return context.shrink().map(fromShrinkableToNextValue);\n    }\n\n    return Stream.nil();\n  }\n\n  isSafeContext(context) {\n    return context != null && typeof context === 'object' && 'value' in context && 'shrink' in context;\n  }\n\n  filter(refinement) {\n    return ConverterToNext.convertIfNeeded(this.arb.filter(refinement));\n  }\n\n  map(mapper) {\n    return ConverterToNext.convertIfNeeded(this.arb.map(mapper));\n  }\n\n  chain(fmapper) {\n    return ConverterToNext.convertIfNeeded(this.arb.chain(t => {\n      const fmapped = fmapper(t);\n      if (ConverterToNext.isConverterToNext(fmapped)) return fmapped.arb;else return new ConverterFromNext(fmapped);\n    }));\n  }\n\n  noShrink() {\n    return ConverterToNext.convertIfNeeded(this.arb.noShrink());\n  }\n\n  noBias() {\n    return ConverterToNext.convertIfNeeded(this.arb.noBias());\n  }\n\n}\n_a = identifier;","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/check/arbitrary/definition/ConverterToNext.js"],"names":["_a","Stream","ConverterFromNext","NextArbitrary","NextValue","identifier","fromShrinkableToNextValue","g","hasToBeCloned","value_","value","ConverterToNext","constructor","arb","isConverterToNext","convertIfNeeded","isConverterFromNext","generate","mrng","biasFactor","undefined","withBias","canShrinkWithoutContext","_value","shrink","context","isSafeContext","map","nil","filter","refinement","mapper","chain","fmapper","t","fmapped","noShrink","noBias"],"mappings":"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","sourcesContent":["var _a;\nimport { Stream } from '../../../stream/Stream.js';\nimport { ConverterFromNext } from './ConverterFromNext.js';\nimport { NextArbitrary } from './NextArbitrary.js';\nimport { NextValue } from './NextValue.js';\nconst identifier = '__ConverterToNext__';\nexport function fromShrinkableToNextValue(g) {\n    if (!g.hasToBeCloned) {\n        return new NextValue(g.value_, g);\n    }\n    return new NextValue(g.value_, g, () => g.value);\n}\nexport class ConverterToNext extends NextArbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n        this[_a] = true;\n    }\n    static isConverterToNext(arb) {\n        return identifier in arb;\n    }\n    static convertIfNeeded(arb) {\n        if (ConverterFromNext.isConverterFromNext(arb))\n            return arb.arb;\n        else\n            return new ConverterToNext(arb);\n    }\n    generate(mrng, biasFactor) {\n        const g = biasFactor !== undefined ? this.arb.withBias(biasFactor).generate(mrng) : this.arb.generate(mrng);\n        return fromShrinkableToNextValue(g);\n    }\n    canShrinkWithoutContext(_value) {\n        return false;\n    }\n    shrink(_value, context) {\n        if (this.isSafeContext(context)) {\n            return context.shrink().map(fromShrinkableToNextValue);\n        }\n        return Stream.nil();\n    }\n    isSafeContext(context) {\n        return (context != null && typeof context === 'object' && 'value' in context && 'shrink' in context);\n    }\n    filter(refinement) {\n        return ConverterToNext.convertIfNeeded(this.arb.filter(refinement));\n    }\n    map(mapper) {\n        return ConverterToNext.convertIfNeeded(this.arb.map(mapper));\n    }\n    chain(fmapper) {\n        return ConverterToNext.convertIfNeeded(this.arb.chain((t) => {\n            const fmapped = fmapper(t);\n            if (ConverterToNext.isConverterToNext(fmapped))\n                return fmapped.arb;\n            else\n                return new ConverterFromNext(fmapped);\n        }));\n    }\n    noShrink() {\n        return ConverterToNext.convertIfNeeded(this.arb.noShrink());\n    }\n    noBias() {\n        return ConverterToNext.convertIfNeeded(this.arb.noBias());\n    }\n}\n_a = identifier;\n"]},"metadata":{},"sourceType":"module"}