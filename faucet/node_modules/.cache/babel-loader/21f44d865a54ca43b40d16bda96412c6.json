{"ast":null,"code":"var _a;\n\nimport { Shrinkable } from '../arbitrary/definition/Shrinkable.js';\nconst identifier = '__ConverterFromNextProperty__';\n\nfunction fromNextValueToShrinkableFor(property) {\n  return function fromNextValueToShrinkable(v) {\n    const shrinker = () => property.shrink(v).map(fromNextValueToShrinkable);\n\n    if (!v.hasToBeCloned) {\n      return new Shrinkable(v.value_, shrinker);\n    }\n\n    return new Shrinkable(v.value_, shrinker, () => v.value);\n  };\n}\n\nexport class ConverterFromNextProperty {\n  constructor(property) {\n    this.property = property;\n    this[_a] = true;\n    this.toShrinkable = fromNextValueToShrinkableFor(property);\n  }\n\n  static isConverterFromNext(property) {\n    return identifier in property;\n  }\n\n  isAsync() {\n    return this.property.isAsync();\n  }\n\n  generate(mrng, runId) {\n    const value = this.property.generate(mrng, runId);\n    return this.toShrinkable(value);\n  }\n\n  run(v) {\n    return this.property.run(v);\n  }\n\n}\n_a = identifier;","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/check/property/ConverterFromNextProperty.js"],"names":["_a","Shrinkable","identifier","fromNextValueToShrinkableFor","property","fromNextValueToShrinkable","v","shrinker","shrink","map","hasToBeCloned","value_","value","ConverterFromNextProperty","constructor","toShrinkable","isConverterFromNext","isAsync","generate","mrng","runId","run"],"mappings":"AAAA,IAAIA,EAAJ;;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,MAAMC,UAAU,GAAG,+BAAnB;;AACA,SAASC,4BAAT,CAAsCC,QAAtC,EAAgD;AAC5C,SAAO,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AACzC,UAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,MAAT,CAAgBF,CAAhB,EAAmBG,GAAnB,CAAuBJ,yBAAvB,CAAvB;;AACA,QAAI,CAACC,CAAC,CAACI,aAAP,EAAsB;AAClB,aAAO,IAAIT,UAAJ,CAAeK,CAAC,CAACK,MAAjB,EAAyBJ,QAAzB,CAAP;AACH;;AACD,WAAO,IAAIN,UAAJ,CAAeK,CAAC,CAACK,MAAjB,EAAyBJ,QAAzB,EAAmC,MAAMD,CAAC,CAACM,KAA3C,CAAP;AACH,GAND;AAOH;;AACD,OAAO,MAAMC,yBAAN,CAAgC;AACnCC,EAAAA,WAAW,CAACV,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKJ,EAAL,IAAW,IAAX;AACA,SAAKe,YAAL,GAAoBZ,4BAA4B,CAACC,QAAD,CAAhD;AACH;;AACyB,SAAnBY,mBAAmB,CAACZ,QAAD,EAAW;AACjC,WAAOF,UAAU,IAAIE,QAArB;AACH;;AACDa,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKb,QAAL,CAAca,OAAd,EAAP;AACH;;AACDC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,KAAP,EAAc;AAClB,UAAMR,KAAK,GAAG,KAAKR,QAAL,CAAcc,QAAd,CAAuBC,IAAvB,EAA6BC,KAA7B,CAAd;AACA,WAAO,KAAKL,YAAL,CAAkBH,KAAlB,CAAP;AACH;;AACDS,EAAAA,GAAG,CAACf,CAAD,EAAI;AACH,WAAO,KAAKF,QAAL,CAAciB,GAAd,CAAkBf,CAAlB,CAAP;AACH;;AAlBkC;AAoBvCN,EAAE,GAAGE,UAAL","sourcesContent":["var _a;\nimport { Shrinkable } from '../arbitrary/definition/Shrinkable.js';\nconst identifier = '__ConverterFromNextProperty__';\nfunction fromNextValueToShrinkableFor(property) {\n    return function fromNextValueToShrinkable(v) {\n        const shrinker = () => property.shrink(v).map(fromNextValueToShrinkable);\n        if (!v.hasToBeCloned) {\n            return new Shrinkable(v.value_, shrinker);\n        }\n        return new Shrinkable(v.value_, shrinker, () => v.value);\n    };\n}\nexport class ConverterFromNextProperty {\n    constructor(property) {\n        this.property = property;\n        this[_a] = true;\n        this.toShrinkable = fromNextValueToShrinkableFor(property);\n    }\n    static isConverterFromNext(property) {\n        return identifier in property;\n    }\n    isAsync() {\n        return this.property.isAsync();\n    }\n    generate(mrng, runId) {\n        const value = this.property.generate(mrng, runId);\n        return this.toShrinkable(value);\n    }\n    run(v) {\n        return this.property.run(v);\n    }\n}\n_a = identifier;\n"]},"metadata":{},"sourceType":"module"}