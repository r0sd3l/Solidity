{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkLabels = void 0;\nObject.defineProperty(exports, \"decodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.decodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"decodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.decodeLabelhash;\n  }\n});\nexports.emptyAddress = void 0;\nObject.defineProperty(exports, \"encodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.encodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"encodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.encodeLabelhash;\n  }\n});\nexports.getEnsStartBlock = getEnsStartBlock;\nObject.defineProperty(exports, \"isDecrypted\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isDecrypted;\n  }\n});\nObject.defineProperty(exports, \"isEncodedLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isEncodedLabelhash;\n  }\n});\nexports.isLabelValid = isLabelValid;\nObject.defineProperty(exports, \"isValidContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.isValidContenthash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.labelhash;\n  }\n});\nexports.mergeLabels = void 0;\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _namehash.namehash;\n  }\n});\nexports.uniq = exports.parseSearchTerm = void 0;\nexports.validateName = validateName;\n\nvar _ethers = require(\"ethers\");\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _contents = require(\"./contents\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar _namehash = require(\"./namehash\"); //import { checkLabelHash } from '../updaters/preImageDB'\n\n\nvar uniq = function uniq(a, param) {\n  return a.filter(function (item, pos) {\n    return a.map(function (mapItem) {\n      return mapItem[param];\n    }).indexOf(item[param]) === pos;\n  });\n};\n\nexports.uniq = uniq;\n\nvar checkLabels = function checkLabels() {\n  for (var _len = arguments.length, labelHashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    labelHashes[_key] = arguments[_key];\n  }\n\n  return labelHashes.map(function (hash) {\n    return null;\n  });\n};\n\nexports.checkLabels = checkLabels;\n\nfunction getEnsStartBlock(networkId) {\n  switch (networkId) {\n    case 1:\n    case '1':\n      return 3327417;\n\n    case 3:\n    case '3':\n      return 25409;\n\n    default:\n      return 0;\n  }\n} // export const checkLabels = (...labelHashes) =>\n//   labelHashes.map(labelHash => checkLabelHash(labelHash) || null)\n\n\nvar mergeLabels = function mergeLabels(labels1, labels2) {\n  return labels1.map(function (label, index) {\n    return label ? label : labels2[index];\n  });\n};\n\nexports.mergeLabels = mergeLabels;\n\nfunction validateName(name) {\n  var nameArray = name.split('.');\n  var hasEmptyLabels = nameArray.filter(function (e) {\n    return e.length < 1;\n  }).length > 0;\n  if (hasEmptyLabels) throw new Error('Domain cannot have empty labels');\n  var normalizedArray = nameArray.map(function (label) {\n    return (0, _labelhash.isEncodedLabelhash)(label) ? label : (0, _ethEnsNamehash.normalize)(label);\n  });\n\n  try {\n    return normalizedArray.join('.');\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction isLabelValid(name) {\n  try {\n    validateName(name);\n\n    if (name.indexOf('.') === -1) {\n      return true;\n    }\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nvar parseSearchTerm = function parseSearchTerm(term, validTld) {\n  var regex = /[^.]+$/;\n\n  try {\n    validateName(term);\n  } catch (e) {\n    return 'invalid';\n  }\n\n  if (term.indexOf('.') !== -1) {\n    var termArray = term.split('.');\n    var tld = term.match(regex) ? term.match(regex)[0] : '';\n\n    if (validTld) {\n      if (tld === 'eth' && termArray[termArray.length - 2].length < 3) {\n        return 'short';\n      }\n\n      return 'supported';\n    }\n\n    return 'unsupported';\n  } else if (_ethers.ethers.utils.isAddress(term)) {\n    return 'address';\n  } else {\n    //check if the search term is actually a tld\n    if (validTld) {\n      return 'tld';\n    }\n\n    return 'search';\n  }\n};\n\nexports.parseSearchTerm = parseSearchTerm;\nvar emptyAddress = '0x0000000000000000000000000000000000000000';\nexports.emptyAddress = emptyAddress;","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/@ensdomains/ensjs/dist/utils/index.js"],"names":["Object","defineProperty","exports","value","checkLabels","enumerable","get","_contents","decodeContenthash","_labelhash","decodeLabelhash","emptyAddress","encodeContenthash","encodeLabelhash","getEnsStartBlock","isDecrypted","isEncodedLabelhash","isLabelValid","isValidContenthash","labelhash","mergeLabels","_namehash","namehash","uniq","parseSearchTerm","validateName","_ethers","require","_ethEnsNamehash","a","param","filter","item","pos","map","mapItem","indexOf","_len","arguments","length","labelHashes","Array","_key","hash","networkId","labels1","labels2","label","index","name","nameArray","split","hasEmptyLabels","e","Error","normalizedArray","normalize","join","console","log","term","validTld","regex","termArray","tld","match","ethers","utils","isAddress"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkLabels = void 0;\nObject.defineProperty(exports, \"decodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.decodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"decodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.decodeLabelhash;\n  }\n});\nexports.emptyAddress = void 0;\nObject.defineProperty(exports, \"encodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.encodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"encodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.encodeLabelhash;\n  }\n});\nexports.getEnsStartBlock = getEnsStartBlock;\nObject.defineProperty(exports, \"isDecrypted\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isDecrypted;\n  }\n});\nObject.defineProperty(exports, \"isEncodedLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isEncodedLabelhash;\n  }\n});\nexports.isLabelValid = isLabelValid;\nObject.defineProperty(exports, \"isValidContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.isValidContenthash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.labelhash;\n  }\n});\nexports.mergeLabels = void 0;\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _namehash.namehash;\n  }\n});\nexports.uniq = exports.parseSearchTerm = void 0;\nexports.validateName = validateName;\n\nvar _ethers = require(\"ethers\");\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _contents = require(\"./contents\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar _namehash = require(\"./namehash\");\n\n//import { checkLabelHash } from '../updaters/preImageDB'\nvar uniq = function uniq(a, param) {\n  return a.filter(function (item, pos) {\n    return a.map(function (mapItem) {\n      return mapItem[param];\n    }).indexOf(item[param]) === pos;\n  });\n};\n\nexports.uniq = uniq;\n\nvar checkLabels = function checkLabels() {\n  for (var _len = arguments.length, labelHashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    labelHashes[_key] = arguments[_key];\n  }\n\n  return labelHashes.map(function (hash) {\n    return null;\n  });\n};\n\nexports.checkLabels = checkLabels;\n\nfunction getEnsStartBlock(networkId) {\n  switch (networkId) {\n    case 1:\n    case '1':\n      return 3327417;\n\n    case 3:\n    case '3':\n      return 25409;\n\n    default:\n      return 0;\n  }\n} // export const checkLabels = (...labelHashes) =>\n//   labelHashes.map(labelHash => checkLabelHash(labelHash) || null)\n\n\nvar mergeLabels = function mergeLabels(labels1, labels2) {\n  return labels1.map(function (label, index) {\n    return label ? label : labels2[index];\n  });\n};\n\nexports.mergeLabels = mergeLabels;\n\nfunction validateName(name) {\n  var nameArray = name.split('.');\n  var hasEmptyLabels = nameArray.filter(function (e) {\n    return e.length < 1;\n  }).length > 0;\n  if (hasEmptyLabels) throw new Error('Domain cannot have empty labels');\n  var normalizedArray = nameArray.map(function (label) {\n    return (0, _labelhash.isEncodedLabelhash)(label) ? label : (0, _ethEnsNamehash.normalize)(label);\n  });\n\n  try {\n    return normalizedArray.join('.');\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction isLabelValid(name) {\n  try {\n    validateName(name);\n\n    if (name.indexOf('.') === -1) {\n      return true;\n    }\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nvar parseSearchTerm = function parseSearchTerm(term, validTld) {\n  var regex = /[^.]+$/;\n\n  try {\n    validateName(term);\n  } catch (e) {\n    return 'invalid';\n  }\n\n  if (term.indexOf('.') !== -1) {\n    var termArray = term.split('.');\n    var tld = term.match(regex) ? term.match(regex)[0] : '';\n\n    if (validTld) {\n      if (tld === 'eth' && termArray[termArray.length - 2].length < 3) {\n        return 'short';\n      }\n\n      return 'supported';\n    }\n\n    return 'unsupported';\n  } else if (_ethers.ethers.utils.isAddress(term)) {\n    return 'address';\n  } else {\n    //check if the search term is actually a tld\n    if (validTld) {\n      return 'tld';\n    }\n\n    return 'search';\n  }\n};\n\nexports.parseSearchTerm = parseSearchTerm;\nvar emptyAddress = '0x0000000000000000000000000000000000000000';\nexports.emptyAddress = emptyAddress;"]},"metadata":{},"sourceType":"script"}