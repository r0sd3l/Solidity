{"ast":null,"code":"import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nimport { maxSafeInteger } from '../../maxSafeInteger.js';\nimport { oneof } from '../../oneof.js';\nimport { string } from '../../string.js';\nimport { boxedArbitraryBuilder } from '../builders/BoxedArbitraryBuilder.js';\n\nfunction defaultValues(constraints) {\n  return [boolean(), maxSafeInteger(), double({\n    next: true\n  }), string(constraints), oneof(string(constraints), constant(null), constant(undefined))];\n}\n\nfunction boxArbitraries(arbs) {\n  return arbs.map(arb => boxedArbitraryBuilder(arb));\n}\n\nfunction boxArbitrariesIfNeeded(arbs, boxEnabled) {\n  return boxEnabled ? boxArbitraries(arbs).concat(arbs) : arbs;\n}\n\nexport function toQualifiedObjectConstraints() {\n  let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  function orDefault(optionalValue, defaultValue) {\n    return optionalValue !== undefined ? optionalValue : defaultValue;\n  }\n\n  const valueConstraints = {\n    size: settings.size\n  };\n  return {\n    key: orDefault(settings.key, string(valueConstraints)),\n    values: boxArbitrariesIfNeeded(orDefault(settings.values, defaultValues(valueConstraints)), orDefault(settings.withBoxedValues, false)),\n    depthFactor: orDefault(settings.depthFactor, 0),\n    maxDepth: orDefault(settings.maxDepth, 2),\n    maxKeys: orDefault(settings.maxKeys, 5),\n    size: settings.size,\n    withSet: orDefault(settings.withSet, false),\n    withMap: orDefault(settings.withMap, false),\n    withObjectString: orDefault(settings.withObjectString, false),\n    withNullPrototype: orDefault(settings.withNullPrototype, false),\n    withBigInt: orDefault(settings.withBigInt, false),\n    withDate: orDefault(settings.withDate, false),\n    withTypedArray: orDefault(settings.withTypedArray, false),\n    withSparseArray: orDefault(settings.withSparseArray, false)\n  };\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/QualifiedObjectConstraints.js"],"names":["boolean","constant","double","maxSafeInteger","oneof","string","boxedArbitraryBuilder","defaultValues","constraints","next","undefined","boxArbitraries","arbs","map","arb","boxArbitrariesIfNeeded","boxEnabled","concat","toQualifiedObjectConstraints","settings","orDefault","optionalValue","defaultValue","valueConstraints","size","key","values","withBoxedValues","depthFactor","maxDepth","maxKeys","withSet","withMap","withObjectString","withNullPrototype","withBigInt","withDate","withTypedArray","withSparseArray"],"mappings":"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","sourcesContent":["import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nimport { maxSafeInteger } from '../../maxSafeInteger.js';\nimport { oneof } from '../../oneof.js';\nimport { string } from '../../string.js';\nimport { boxedArbitraryBuilder } from '../builders/BoxedArbitraryBuilder.js';\nfunction defaultValues(constraints) {\n    return [\n        boolean(),\n        maxSafeInteger(),\n        double({ next: true }),\n        string(constraints),\n        oneof(string(constraints), constant(null), constant(undefined)),\n    ];\n}\nfunction boxArbitraries(arbs) {\n    return arbs.map((arb) => boxedArbitraryBuilder(arb));\n}\nfunction boxArbitrariesIfNeeded(arbs, boxEnabled) {\n    return boxEnabled ? boxArbitraries(arbs).concat(arbs) : arbs;\n}\nexport function toQualifiedObjectConstraints(settings = {}) {\n    function orDefault(optionalValue, defaultValue) {\n        return optionalValue !== undefined ? optionalValue : defaultValue;\n    }\n    const valueConstraints = { size: settings.size };\n    return {\n        key: orDefault(settings.key, string(valueConstraints)),\n        values: boxArbitrariesIfNeeded(orDefault(settings.values, defaultValues(valueConstraints)), orDefault(settings.withBoxedValues, false)),\n        depthFactor: orDefault(settings.depthFactor, 0),\n        maxDepth: orDefault(settings.maxDepth, 2),\n        maxKeys: orDefault(settings.maxKeys, 5),\n        size: settings.size,\n        withSet: orDefault(settings.withSet, false),\n        withMap: orDefault(settings.withMap, false),\n        withObjectString: orDefault(settings.withObjectString, false),\n        withNullPrototype: orDefault(settings.withNullPrototype, false),\n        withBigInt: orDefault(settings.withBigInt, false),\n        withDate: orDefault(settings.withDate, false),\n        withTypedArray: orDefault(settings.withTypedArray, false),\n        withSparseArray: orDefault(settings.withSparseArray, false),\n    };\n}\n"]},"metadata":{},"sourceType":"module"}