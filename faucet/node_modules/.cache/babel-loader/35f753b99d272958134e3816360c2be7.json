{"ast":null,"code":"export function paddedEightsToUuidMapper(t) {\n  return `${t[0]}-${t[1].substring(4)}-${t[1].substring(0, 4)}-${t[2].substring(0, 4)}-${t[2].substring(4)}${t[3]}`;\n}\nconst UuidRegex = /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/;\nexport function paddedEightsToUuidUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported type');\n  }\n\n  const m = UuidRegex.exec(value);\n\n  if (m === null) {\n    throw new Error('Unsupported type');\n  }\n\n  return [m[1], m[3] + m[2], m[4] + m[5].substring(0, 4), m[5].substring(4)];\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/PaddedEightsToUuid.js"],"names":["paddedEightsToUuidMapper","t","substring","UuidRegex","paddedEightsToUuidUnmapper","value","Error","m","exec"],"mappings":"AAAA,OAAO,SAASA,wBAAT,CAAkCC,CAAlC,EAAqC;AACxC,SAAQ,GAAEA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAD,CAAKC,SAAL,CAAe,CAAf,CAAkB,IAAGD,CAAC,CAAC,CAAD,CAAD,CAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAqB,IAAGD,CAAC,CAAC,CAAD,CAAD,CAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAqB,IAAGD,CAAC,CAAC,CAAD,CAAD,CAAKC,SAAL,CAAe,CAAf,CAAkB,GAAED,CAAC,CAAC,CAAD,CAAI,EAAhH;AACH;AACD,MAAME,SAAS,GAAG,0EAAlB;AACA,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;AAC9C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACH;;AACD,QAAMC,CAAC,GAAGJ,SAAS,CAACK,IAAV,CAAeH,KAAf,CAAV;;AACA,MAAIE,CAAC,KAAK,IAAV,EAAgB;AACZ,UAAM,IAAID,KAAJ,CAAU,kBAAV,CAAN;AACH;;AACD,SAAO,CAACC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAf,EAAoBA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKL,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAA3B,EAAiDK,CAAC,CAAC,CAAD,CAAD,CAAKL,SAAL,CAAe,CAAf,CAAjD,CAAP;AACH","sourcesContent":["export function paddedEightsToUuidMapper(t) {\n    return `${t[0]}-${t[1].substring(4)}-${t[1].substring(0, 4)}-${t[2].substring(0, 4)}-${t[2].substring(4)}${t[3]}`;\n}\nconst UuidRegex = /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/;\nexport function paddedEightsToUuidUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const m = UuidRegex.exec(value);\n    if (m === null) {\n        throw new Error('Unsupported type');\n    }\n    return [m[1], m[3] + m[2], m[4] + m[5].substring(0, 4), m[5].substring(4)];\n}\n"]},"metadata":{},"sourceType":"module"}