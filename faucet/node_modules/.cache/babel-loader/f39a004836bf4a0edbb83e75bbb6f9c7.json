{"ast":null,"code":"import { oneof } from './oneof.js';\nimport { tuple } from './tuple.js';\nimport { buildStringifiedNatArbitrary } from './_internals/builders/StringifiedNatArbitraryBuilder.js';\nimport { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\n\nfunction dotJoinerMapper(data) {\n  return data.join('.');\n}\n\nfunction dotJoinerUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Invalid type');\n  }\n\n  return value.split('.');\n}\n\nexport function ipV4Extended() {\n  return oneof(convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255))).map(dotJoinerMapper, dotJoinerUnmapper)), convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(65535))).map(dotJoinerMapper, dotJoinerUnmapper)), convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(16777215))).map(dotJoinerMapper, dotJoinerUnmapper)), buildStringifiedNatArbitrary(4294967295));\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/ipV4Extended.js"],"names":["oneof","tuple","buildStringifiedNatArbitrary","convertFromNext","convertToNext","dotJoinerMapper","data","join","dotJoinerUnmapper","value","Error","split","ipV4Extended","map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,4BAAT,QAA6C,yDAA7C;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,6CAA/C;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAOA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAP;AACH;;AACD,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACH;;AACD,SAAOD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAP;AACH;;AACD,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAOZ,KAAK,CAACG,eAAe,CAACC,aAAa,CAACH,KAAK,CAACC,4BAA4B,CAAC,GAAD,CAA7B,EAAoCA,4BAA4B,CAAC,GAAD,CAAhE,EAAuEA,4BAA4B,CAAC,GAAD,CAAnG,EAA0GA,4BAA4B,CAAC,GAAD,CAAtI,CAAN,CAAb,CAAiKW,GAAjK,CAAqKR,eAArK,EAAsLG,iBAAtL,CAAD,CAAhB,EAA4NL,eAAe,CAACC,aAAa,CAACH,KAAK,CAACC,4BAA4B,CAAC,GAAD,CAA7B,EAAoCA,4BAA4B,CAAC,GAAD,CAAhE,EAAuEA,4BAA4B,CAAC,KAAD,CAAnG,CAAN,CAAb,CAAgIW,GAAhI,CAAoIR,eAApI,EAAqJG,iBAArJ,CAAD,CAA3O,EAAsZL,eAAe,CAACC,aAAa,CAACH,KAAK,CAACC,4BAA4B,CAAC,GAAD,CAA7B,EAAoCA,4BAA4B,CAAC,QAAD,CAAhE,CAAN,CAAb,CAAgGW,GAAhG,CAAoGR,eAApG,EAAqHG,iBAArH,CAAD,CAAra,EAAgjBN,4BAA4B,CAAC,UAAD,CAA5kB,CAAZ;AACH","sourcesContent":["import { oneof } from './oneof.js';\nimport { tuple } from './tuple.js';\nimport { buildStringifiedNatArbitrary } from './_internals/builders/StringifiedNatArbitraryBuilder.js';\nimport { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nfunction dotJoinerMapper(data) {\n    return data.join('.');\n}\nfunction dotJoinerUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Invalid type');\n    }\n    return value.split('.');\n}\nexport function ipV4Extended() {\n    return oneof(convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255))).map(dotJoinerMapper, dotJoinerUnmapper)), convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(65535))).map(dotJoinerMapper, dotJoinerUnmapper)), convertFromNext(convertToNext(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(16777215))).map(dotJoinerMapper, dotJoinerUnmapper)), buildStringifiedNatArbitrary(4294967295));\n}\n"]},"metadata":{},"sourceType":"module"}