{"ast":null,"code":"import { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nimport { integer } from './integer.js';\n\nfunction booleanMapper(v) {\n  return v === 1;\n}\n\nfunction booleanUnmapper(v) {\n  if (typeof v !== 'boolean') throw new Error('Unsupported input type');\n  return v === true ? 1 : 0;\n}\n\nfunction boolean() {\n  return convertFromNext(convertToNext(integer({\n    min: 0,\n    max: 1\n  })).map(booleanMapper, booleanUnmapper).noBias());\n}\n\nexport { boolean };","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/boolean.js"],"names":["convertFromNext","convertToNext","integer","booleanMapper","v","booleanUnmapper","Error","boolean","min","max","map","noBias"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,6CAA/C;AACA,SAASC,OAAT,QAAwB,cAAxB;;AACA,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,SAAOA,CAAC,KAAK,CAAb;AACH;;AACD,SAASC,eAAT,CAAyBD,CAAzB,EAA4B;AACxB,MAAI,OAAOA,CAAP,KAAa,SAAjB,EACI,MAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACJ,SAAOF,CAAC,KAAK,IAAN,GAAa,CAAb,GAAiB,CAAxB;AACH;;AACD,SAASG,OAAT,GAAmB;AACf,SAAOP,eAAe,CAACC,aAAa,CAACC,OAAO,CAAC;AAAEM,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAD,CAAR,CAAb,CAClBC,GADkB,CACdP,aADc,EACCE,eADD,EAElBM,MAFkB,EAAD,CAAtB;AAGH;;AACD,SAASJ,OAAT","sourcesContent":["import { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nimport { integer } from './integer.js';\nfunction booleanMapper(v) {\n    return v === 1;\n}\nfunction booleanUnmapper(v) {\n    if (typeof v !== 'boolean')\n        throw new Error('Unsupported input type');\n    return v === true ? 1 : 0;\n}\nfunction boolean() {\n    return convertFromNext(convertToNext(integer({ min: 0, max: 1 }))\n        .map(booleanMapper, booleanUnmapper)\n        .noBias());\n}\nexport { boolean };\n"]},"metadata":{},"sourceType":"module"}