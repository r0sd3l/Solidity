{"ast":null,"code":"class Nil {\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next(value) {\n    return {\n      value,\n      done: true\n    };\n  }\n\n}\n\nNil.nil = new Nil();\nexport function nilHelper() {\n  return Nil.nil;\n}\nexport function* mapHelper(g, f) {\n  for (const v of g) {\n    yield f(v);\n  }\n}\nexport function* flatMapHelper(g, f) {\n  for (const v of g) {\n    yield* f(v);\n  }\n}\nexport function* filterHelper(g, f) {\n  for (const v of g) {\n    if (f(v)) {\n      yield v;\n    }\n  }\n}\nexport function* takeNHelper(g, n) {\n  for (let i = 0; i < n; ++i) {\n    const cur = g.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    yield cur.value;\n  }\n}\nexport function* takeWhileHelper(g, f) {\n  let cur = g.next();\n\n  while (!cur.done && f(cur.value)) {\n    yield cur.value;\n    cur = g.next();\n  }\n}\nexport function* joinHelper(g, others) {\n  for (let cur = g.next(); !cur.done; cur = g.next()) {\n    yield cur.value;\n  }\n\n  for (const s of others) {\n    for (let cur = s.next(); !cur.done; cur = s.next()) {\n      yield cur.value;\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/stream/StreamHelpers.js"],"names":["Nil","Symbol","iterator","next","value","done","nil","nilHelper","mapHelper","g","f","v","flatMapHelper","filterHelper","takeNHelper","n","i","cur","takeWhileHelper","joinHelper","others","s"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACU,GAAfC,MAAM,CAACC,QAAQ,IAAI;AAChB,WAAO,IAAP;AACH;;AACDC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACR,WAAO;AAAEA,MAAAA,KAAF;AAASC,MAAAA,IAAI,EAAE;AAAf,KAAP;AACH;;AANK;;AAQVL,GAAG,CAACM,GAAJ,GAAU,IAAIN,GAAJ,EAAV;AACA,OAAO,SAASO,SAAT,GAAqB;AACxB,SAAOP,GAAG,CAACM,GAAX;AACH;AACD,OAAO,UAAUE,SAAV,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC7B,OAAK,MAAMC,CAAX,IAAgBF,CAAhB,EAAmB;AACf,UAAMC,CAAC,CAACC,CAAD,CAAP;AACH;AACJ;AACD,OAAO,UAAUC,aAAV,CAAwBH,CAAxB,EAA2BC,CAA3B,EAA8B;AACjC,OAAK,MAAMC,CAAX,IAAgBF,CAAhB,EAAmB;AACf,WAAOC,CAAC,CAACC,CAAD,CAAR;AACH;AACJ;AACD,OAAO,UAAUE,YAAV,CAAuBJ,CAAvB,EAA0BC,CAA1B,EAA6B;AAChC,OAAK,MAAMC,CAAX,IAAgBF,CAAhB,EAAmB;AACf,QAAIC,CAAC,CAACC,CAAD,CAAL,EAAU;AACN,YAAMA,CAAN;AACH;AACJ;AACJ;AACD,OAAO,UAAUG,WAAV,CAAsBL,CAAtB,EAAyBM,CAAzB,EAA4B;AAC/B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuB,EAAEC,CAAzB,EAA4B;AACxB,UAAMC,GAAG,GAAGR,CAAC,CAACN,IAAF,EAAZ;;AACA,QAAIc,GAAG,CAACZ,IAAR,EAAc;AACV;AACH;;AACD,UAAMY,GAAG,CAACb,KAAV;AACH;AACJ;AACD,OAAO,UAAUc,eAAV,CAA0BT,CAA1B,EAA6BC,CAA7B,EAAgC;AACnC,MAAIO,GAAG,GAAGR,CAAC,CAACN,IAAF,EAAV;;AACA,SAAO,CAACc,GAAG,CAACZ,IAAL,IAAaK,CAAC,CAACO,GAAG,CAACb,KAAL,CAArB,EAAkC;AAC9B,UAAMa,GAAG,CAACb,KAAV;AACAa,IAAAA,GAAG,GAAGR,CAAC,CAACN,IAAF,EAAN;AACH;AACJ;AACD,OAAO,UAAUgB,UAAV,CAAqBV,CAArB,EAAwBW,MAAxB,EAAgC;AACnC,OAAK,IAAIH,GAAG,GAAGR,CAAC,CAACN,IAAF,EAAf,EAAyB,CAACc,GAAG,CAACZ,IAA9B,EAAoCY,GAAG,GAAGR,CAAC,CAACN,IAAF,EAA1C,EAAoD;AAChD,UAAMc,GAAG,CAACb,KAAV;AACH;;AACD,OAAK,MAAMiB,CAAX,IAAgBD,MAAhB,EAAwB;AACpB,SAAK,IAAIH,GAAG,GAAGI,CAAC,CAAClB,IAAF,EAAf,EAAyB,CAACc,GAAG,CAACZ,IAA9B,EAAoCY,GAAG,GAAGI,CAAC,CAAClB,IAAF,EAA1C,EAAoD;AAChD,YAAMc,GAAG,CAACb,KAAV;AACH;AACJ;AACJ","sourcesContent":["class Nil {\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return { value, done: true };\n    }\n}\nNil.nil = new Nil();\nexport function nilHelper() {\n    return Nil.nil;\n}\nexport function* mapHelper(g, f) {\n    for (const v of g) {\n        yield f(v);\n    }\n}\nexport function* flatMapHelper(g, f) {\n    for (const v of g) {\n        yield* f(v);\n    }\n}\nexport function* filterHelper(g, f) {\n    for (const v of g) {\n        if (f(v)) {\n            yield v;\n        }\n    }\n}\nexport function* takeNHelper(g, n) {\n    for (let i = 0; i < n; ++i) {\n        const cur = g.next();\n        if (cur.done) {\n            break;\n        }\n        yield cur.value;\n    }\n}\nexport function* takeWhileHelper(g, f) {\n    let cur = g.next();\n    while (!cur.done && f(cur.value)) {\n        yield cur.value;\n        cur = g.next();\n    }\n}\nexport function* joinHelper(g, others) {\n    for (let cur = g.next(); !cur.done; cur = g.next()) {\n        yield cur.value;\n    }\n    for (const s of others) {\n        for (let cur = s.next(); !cur.done; cur = s.next()) {\n            yield cur.value;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}