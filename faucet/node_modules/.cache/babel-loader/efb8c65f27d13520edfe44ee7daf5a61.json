{"ast":null,"code":"class ConvertedRandomGenerator {\n  constructor(rng) {\n    this.rng = rng;\n\n    if (typeof this.rng.jump === 'function') {\n      this.jump = function jump() {\n        const out = this.jump();\n        return new ConvertedRandomGenerator(out);\n      };\n\n      this.unsafeJump = function unsafeJump() {\n        const out = this.jump();\n        this.rng = out;\n      };\n    }\n  }\n\n  min() {\n    return this.rng.min();\n  }\n\n  max() {\n    return this.rng.max();\n  }\n\n  clone() {\n    return new ConvertedRandomGenerator(this.rng);\n  }\n\n  next() {\n    const out = this.rng.next();\n    return [out[0], new ConvertedRandomGenerator(out[1])];\n  }\n\n  unsafeNext() {\n    const out = this.rng.next();\n    this.rng = out[1];\n    return out[0];\n  }\n\n}\n\nexport function convertToRandomGenerator(rng) {\n  if ('clone' in rng && 'unsafeNext' in rng) {\n    return rng;\n  }\n\n  return new ConvertedRandomGenerator(rng);\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/random/generator/PureRandom.js"],"names":["ConvertedRandomGenerator","constructor","rng","jump","out","unsafeJump","min","max","clone","next","unsafeNext","convertToRandomGenerator"],"mappings":"AAAA,MAAMA,wBAAN,CAA+B;AAC3BC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;;AACA,QAAI,OAAO,KAAKA,GAAL,CAASC,IAAhB,KAAyB,UAA7B,EAAyC;AACrC,WAAKA,IAAL,GAAY,SAASA,IAAT,GAAgB;AACxB,cAAMC,GAAG,GAAG,KAAKD,IAAL,EAAZ;AACA,eAAO,IAAIH,wBAAJ,CAA6BI,GAA7B,CAAP;AACH,OAHD;;AAIA,WAAKC,UAAL,GAAkB,SAASA,UAAT,GAAsB;AACpC,cAAMD,GAAG,GAAG,KAAKD,IAAL,EAAZ;AACA,aAAKD,GAAL,GAAWE,GAAX;AACH,OAHD;AAIH;AACJ;;AACDE,EAAAA,GAAG,GAAG;AACF,WAAO,KAAKJ,GAAL,CAASI,GAAT,EAAP;AACH;;AACDC,EAAAA,GAAG,GAAG;AACF,WAAO,KAAKL,GAAL,CAASK,GAAT,EAAP;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,WAAO,IAAIR,wBAAJ,CAA6B,KAAKE,GAAlC,CAAP;AACH;;AACDO,EAAAA,IAAI,GAAG;AACH,UAAML,GAAG,GAAG,KAAKF,GAAL,CAASO,IAAT,EAAZ;AACA,WAAO,CAACL,GAAG,CAAC,CAAD,CAAJ,EAAS,IAAIJ,wBAAJ,CAA6BI,GAAG,CAAC,CAAD,CAAhC,CAAT,CAAP;AACH;;AACDM,EAAAA,UAAU,GAAG;AACT,UAAMN,GAAG,GAAG,KAAKF,GAAL,CAASO,IAAT,EAAZ;AACA,SAAKP,GAAL,GAAWE,GAAG,CAAC,CAAD,CAAd;AACA,WAAOA,GAAG,CAAC,CAAD,CAAV;AACH;;AA/B0B;;AAiC/B,OAAO,SAASO,wBAAT,CAAkCT,GAAlC,EAAuC;AAC1C,MAAI,WAAWA,GAAX,IAAkB,gBAAgBA,GAAtC,EAA2C;AACvC,WAAOA,GAAP;AACH;;AACD,SAAO,IAAIF,wBAAJ,CAA6BE,GAA7B,CAAP;AACH","sourcesContent":["class ConvertedRandomGenerator {\n    constructor(rng) {\n        this.rng = rng;\n        if (typeof this.rng.jump === 'function') {\n            this.jump = function jump() {\n                const out = this.jump();\n                return new ConvertedRandomGenerator(out);\n            };\n            this.unsafeJump = function unsafeJump() {\n                const out = this.jump();\n                this.rng = out;\n            };\n        }\n    }\n    min() {\n        return this.rng.min();\n    }\n    max() {\n        return this.rng.max();\n    }\n    clone() {\n        return new ConvertedRandomGenerator(this.rng);\n    }\n    next() {\n        const out = this.rng.next();\n        return [out[0], new ConvertedRandomGenerator(out[1])];\n    }\n    unsafeNext() {\n        const out = this.rng.next();\n        this.rng = out[1];\n        return out[0];\n    }\n}\nexport function convertToRandomGenerator(rng) {\n    if ('clone' in rng && 'unsafeNext' in rng) {\n        return rng;\n    }\n    return new ConvertedRandomGenerator(rng);\n}\n"]},"metadata":{},"sourceType":"module"}