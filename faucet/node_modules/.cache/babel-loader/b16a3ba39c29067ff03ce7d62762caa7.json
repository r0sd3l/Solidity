{"ast":null,"code":"import { addArrayIntToNew, addOneToPositiveArrayInt, substractArrayIntToNew, trimArrayIntInplace } from './internals/ArrayInt.js';\nimport { unsafeUniformArrayIntDistributionInternal } from './internals/UnsafeUniformArrayIntDistributionInternal.js';\nexport function unsafeUniformArrayIntDistribution(from, to, rng) {\n  var rangeSize = trimArrayIntInplace(addOneToPositiveArrayInt(substractArrayIntToNew(to, from)));\n  var emptyArrayIntData = rangeSize.data.slice(0);\n  var g = unsafeUniformArrayIntDistributionInternal(emptyArrayIntData, rangeSize.data, rng);\n  return trimArrayIntInplace(addArrayIntToNew({\n    sign: 1,\n    data: g\n  }, from));\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/pure-rand/lib/esm/distribution/UnsafeUniformArrayIntDistribution.js"],"names":["addArrayIntToNew","addOneToPositiveArrayInt","substractArrayIntToNew","trimArrayIntInplace","unsafeUniformArrayIntDistributionInternal","unsafeUniformArrayIntDistribution","from","to","rng","rangeSize","emptyArrayIntData","data","slice","g","sign"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,wBAA3B,EAAqDC,sBAArD,EAA6EC,mBAA7E,QAAyG,yBAAzG;AACA,SAASC,yCAAT,QAA0D,0DAA1D;AACA,OAAO,SAASC,iCAAT,CAA2CC,IAA3C,EAAiDC,EAAjD,EAAqDC,GAArD,EAA0D;AAC7D,MAAIC,SAAS,GAAGN,mBAAmB,CAACF,wBAAwB,CAACC,sBAAsB,CAACK,EAAD,EAAKD,IAAL,CAAvB,CAAzB,CAAnC;AACA,MAAII,iBAAiB,GAAGD,SAAS,CAACE,IAAV,CAAeC,KAAf,CAAqB,CAArB,CAAxB;AACA,MAAIC,CAAC,GAAGT,yCAAyC,CAACM,iBAAD,EAAoBD,SAAS,CAACE,IAA9B,EAAoCH,GAApC,CAAjD;AACA,SAAOL,mBAAmB,CAACH,gBAAgB,CAAC;AAAEc,IAAAA,IAAI,EAAE,CAAR;AAAWH,IAAAA,IAAI,EAAEE;AAAjB,GAAD,EAAuBP,IAAvB,CAAjB,CAA1B;AACH","sourcesContent":["import { addArrayIntToNew, addOneToPositiveArrayInt, substractArrayIntToNew, trimArrayIntInplace, } from './internals/ArrayInt.js';\nimport { unsafeUniformArrayIntDistributionInternal } from './internals/UnsafeUniformArrayIntDistributionInternal.js';\nexport function unsafeUniformArrayIntDistribution(from, to, rng) {\n    var rangeSize = trimArrayIntInplace(addOneToPositiveArrayInt(substractArrayIntToNew(to, from)));\n    var emptyArrayIntData = rangeSize.data.slice(0);\n    var g = unsafeUniformArrayIntDistributionInternal(emptyArrayIntData, rangeSize.data, rng);\n    return trimArrayIntInplace(addArrayIntToNew({ sign: 1, data: g }, from));\n}\n"]},"metadata":{},"sourceType":"module"}