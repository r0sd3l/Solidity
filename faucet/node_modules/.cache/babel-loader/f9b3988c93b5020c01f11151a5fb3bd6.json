{"ast":null,"code":"import { convertFromNextWithShrunkOnce } from '../check/arbitrary/definition/Converters.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigUintN(n) {\n  if (n < 0) {\n    throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n  }\n\n  const min = BigInt(0);\n  const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n  const arb = new BigIntArbitrary(min, max);\n  return convertFromNextWithShrunkOnce(arb, arb.defaultTarget());\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/bigUintN.js"],"names":["convertFromNextWithShrunkOnce","BigIntArbitrary","bigUintN","n","Error","min","BigInt","max","arb","defaultTarget"],"mappings":"AAAA,SAASA,6BAAT,QAA8C,6CAA9C;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACxB,MAAIA,CAAC,GAAG,CAAR,EAAW;AACP,UAAM,IAAIC,KAAJ,CAAU,2EAAV,CAAN;AACH;;AACD,QAAMC,GAAG,GAAGC,MAAM,CAAC,CAAD,CAAlB;AACA,QAAMC,GAAG,GAAG,CAACD,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAACH,CAAD,CAApB,IAA2BG,MAAM,CAAC,CAAD,CAA7C;AACA,QAAME,GAAG,GAAG,IAAIP,eAAJ,CAAoBI,GAApB,EAAyBE,GAAzB,CAAZ;AACA,SAAOP,6BAA6B,CAACQ,GAAD,EAAMA,GAAG,CAACC,aAAJ,EAAN,CAApC;AACH","sourcesContent":["import { convertFromNextWithShrunkOnce } from '../check/arbitrary/definition/Converters.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigUintN(n) {\n    if (n < 0) {\n        throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n    }\n    const min = BigInt(0);\n    const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n    const arb = new BigIntArbitrary(min, max);\n    return convertFromNextWithShrunkOnce(arb, arb.defaultTarget());\n}\n"]},"metadata":{},"sourceType":"module"}