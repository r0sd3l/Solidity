{"ast":null,"code":"export class StrictlyEqualSet {\n  constructor(selector) {\n    this.selector = selector;\n    this.selectedItemsExceptNaN = new Set();\n    this.data = [];\n  }\n\n  tryAdd(value) {\n    const selected = this.selector(value);\n\n    if (Number.isNaN(selected)) {\n      this.data.push(value);\n      return true;\n    }\n\n    const sizeBefore = this.selectedItemsExceptNaN.size;\n    this.selectedItemsExceptNaN.add(selected);\n\n    if (sizeBefore !== this.selectedItemsExceptNaN.size) {\n      this.data.push(value);\n      return true;\n    }\n\n    return false;\n  }\n\n  size() {\n    return this.data.length;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/StrictlyEqualSet.js"],"names":["StrictlyEqualSet","constructor","selector","selectedItemsExceptNaN","Set","data","tryAdd","value","selected","Number","isNaN","push","sizeBefore","size","add","length","getData"],"mappings":"AAAA,OAAO,MAAMA,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,sBAAL,GAA8B,IAAIC,GAAJ,EAA9B;AACA,SAAKC,IAAL,GAAY,EAAZ;AACH;;AACDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,UAAMC,QAAQ,GAAG,KAAKN,QAAL,CAAcK,KAAd,CAAjB;;AACA,QAAIE,MAAM,CAACC,KAAP,CAAaF,QAAb,CAAJ,EAA4B;AACxB,WAAKH,IAAL,CAAUM,IAAV,CAAeJ,KAAf;AACA,aAAO,IAAP;AACH;;AACD,UAAMK,UAAU,GAAG,KAAKT,sBAAL,CAA4BU,IAA/C;AACA,SAAKV,sBAAL,CAA4BW,GAA5B,CAAgCN,QAAhC;;AACA,QAAII,UAAU,KAAK,KAAKT,sBAAL,CAA4BU,IAA/C,EAAqD;AACjD,WAAKR,IAAL,CAAUM,IAAV,CAAeJ,KAAf;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACDM,EAAAA,IAAI,GAAG;AACH,WAAO,KAAKR,IAAL,CAAUU,MAAjB;AACH;;AACDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKX,IAAZ;AACH;;AAzByB","sourcesContent":["export class StrictlyEqualSet {\n    constructor(selector) {\n        this.selector = selector;\n        this.selectedItemsExceptNaN = new Set();\n        this.data = [];\n    }\n    tryAdd(value) {\n        const selected = this.selector(value);\n        if (Number.isNaN(selected)) {\n            this.data.push(value);\n            return true;\n        }\n        const sizeBefore = this.selectedItemsExceptNaN.size;\n        this.selectedItemsExceptNaN.add(selected);\n        if (sizeBefore !== this.selectedItemsExceptNaN.size) {\n            this.data.push(value);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}