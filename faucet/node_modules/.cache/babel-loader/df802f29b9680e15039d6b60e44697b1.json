{"ast":null,"code":"import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { convertToNext } from '../arbitrary/definition/Converters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nexport class Property {\n  constructor(rawArb, predicate) {\n    this.predicate = predicate;\n    const {\n      beforeEach = Property.dummyHook,\n      afterEach = Property.dummyHook,\n      asyncBeforeEach,\n      asyncAfterEach\n    } = readConfigureGlobal() || {};\n\n    if (asyncBeforeEach !== undefined) {\n      throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n    }\n\n    if (asyncAfterEach !== undefined) {\n      throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n    }\n\n    this.beforeEachHook = beforeEach;\n    this.afterEachHook = afterEach;\n    this.arb = convertToNext(rawArb);\n  }\n\n  isAsync() {\n    return false;\n  }\n\n  generate(mrng, runId) {\n    const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n    return noUndefinedAsContext(value);\n  }\n\n  shrink(value) {\n    if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n      return Stream.nil();\n    }\n\n    const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n    return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n  }\n\n  run(v) {\n    this.beforeEachHook();\n\n    try {\n      const output = this.predicate(v);\n      return output == null || output === true ? null : 'Property failed by returning false';\n    } catch (err) {\n      if (PreconditionFailure.isFailure(err)) return err;\n      if (err instanceof Error && err.stack) return `${err}\\n\\nStack trace: ${err.stack}`;\n      return `${err}`;\n    } finally {\n      this.afterEachHook();\n    }\n  }\n\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n\n    return this;\n  }\n\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n\n    return this;\n  }\n\n}\n\nProperty.dummyHook = () => {};","map":{"version":3,"sources":["C:/Users/rodri/Solidity/solidity/faucet/node_modules/fast-check/lib/esm/check/property/Property.generic.js"],"names":["PreconditionFailure","runIdToFrequency","readConfigureGlobal","convertToNext","Stream","noUndefinedAsContext","UndefinedContextPlaceholder","Property","constructor","rawArb","predicate","beforeEach","dummyHook","afterEach","asyncBeforeEach","asyncAfterEach","undefined","Error","beforeEachHook","afterEachHook","arb","isAsync","generate","mrng","runId","value","shrink","context","canShrinkWithoutContext","value_","nil","safeContext","map","run","v","output","err","isFailure","stack","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"mappings":"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","sourcesContent":["import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { convertToNext } from '../arbitrary/definition/Converters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder, } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nexport class Property {\n    constructor(rawArb, predicate) {\n        this.predicate = predicate;\n        const { beforeEach = Property.dummyHook, afterEach = Property.dummyHook, asyncBeforeEach, asyncAfterEach, } = readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined) {\n            throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n        }\n        if (asyncAfterEach !== undefined) {\n            throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n        }\n        this.beforeEachHook = beforeEach;\n        this.afterEachHook = afterEach;\n        this.arb = convertToNext(rawArb);\n    }\n    isAsync() {\n        return false;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n        return noUndefinedAsContext(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream.nil();\n        }\n        const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n    }\n    run(v) {\n        this.beforeEachHook();\n        try {\n            const output = this.predicate(v);\n            return output == null || output === true ? null : 'Property failed by returning false';\n        }\n        catch (err) {\n            if (PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack)\n                return `${err}\\n\\nStack trace: ${err.stack}`;\n            return `${err}`;\n        }\n        finally {\n            this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nProperty.dummyHook = () => { };\n"]},"metadata":{},"sourceType":"module"}